{"version":3,"sources":["components/NewToDoForm.js","components/ToDoItem.js","components/Calendar.js","App.js","index.js"],"names":["NewToDoForm","handleSubmit","useState","title","setTitle","desc","setDesc","dueDate","setDueDate","Form","useForm","form","name","id","onFinish","resetFields","Item","label","rules","required","message","placeholder","onChange","e","target","value","format","date","dateString","ToDoItem","item","handleDelete","handleReorder","isDone","setIsDone","className","actions","type","checked","icon","DeleteOutlined","onClick","UpOutlined","DownOutlined","Calendar","data","dateCellRender","dateList","map","getDataForDate","App","toDoList","updateToDoList","isVisible","setNewModalVisible","handleDeleteItem","filter","element","handleReorderItem","direction","from","indexOf","length","to","newList","splice","handleModalVisibility","key","shape","size","PlusOutlined","visible","footer","htmlType","onCancel","newItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9578c47d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Input, DatePicker } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nfunction NewToDoForm({ handleSubmit }) {\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [desc, setDesc] = useState(\"\");\r\n\tconst [dueDate, setDueDate] = useState(null);\r\n\r\n\tconst [form] = Form.useForm();\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Form\r\n\t\t\t\tname=\"addItem\"\r\n\t\t\t\tid=\"addItemForm\"\r\n\t\t\t\tform={form}\r\n\t\t\t\tonFinish={() => {\r\n\t\t\t\t\thandleSubmit({ title, desc, dueDate});\r\n\r\n\t\t\t\t\tsetTitle(\"\");\r\n\t\t\t\t\tsetDesc(\"\");\r\n\t\t\t\t\tsetDueDate(\"\");\r\n\r\n\t\t\t\t\tform.resetFields();\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Form.Item name=\"title\" label=\"Title\" rules={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: 'Please provide a title',\r\n\t\t\t\t\t}\r\n\t\t\t\t]}>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tplaceholder=\"Enter name\"\r\n\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item name=\"desc\" label=\"Description\">\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tplaceholder=\"Enter description\"\r\n\t\t\t\t\t\tonChange={(e) => setDesc(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item name=\"dueDate\" label=\"Due date\">\r\n\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t format=\"MM/DD/YYYY\"\r\n\t\t\t\t\t\tonChange={(date, dateString) => setDueDate(dateString)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default NewToDoForm;\r\n","import React, { useState } from \"react\";\r\nimport { Card, Checkbox, Button } from \"antd\";\r\nimport { DeleteOutlined, UpOutlined, DownOutlined } from \"@ant-design/icons\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"../styles/ToDoItem.css\";\r\n\r\nfunction ToDoItem({ item, handleDelete, handleReorder }) {\r\n\tconst [isDone, setIsDone] = useState(item.isDone);\r\n\r\n\treturn (\r\n\t\t<div id=\"item-container\">\r\n\t\t\t<Card\r\n\t\t\t\tid=\"item\"\r\n\t\t\t\tclassName={isDone && \"completed-item\"}\r\n\t\t\t\ttitle={item.title}\r\n\t\t\t\tactions={[\r\n\t\t\t\t\t<Button type=\"text\">\r\n\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\tchecked={isDone}\r\n\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\tsetIsDone(!isDone);\r\n\t\t\t\t\t\t\t\tif (!isDone) handleReorder(item, \"bottom\");\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDone?\r\n\t\t\t\t\t\t</Checkbox>\r\n\t\t\t\t\t</Button>,\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\tonClick={() => handleDelete(item)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</Button>,\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\ticon={<UpOutlined />}\r\n\t\t\t\t\t\t\tonClick={() => handleReorder(item, \"up\")}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\ticon={<DownOutlined />}\r\n\t\t\t\t\t\t\tonClick={() => handleReorder(item, \"down\")}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>,\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t<p>{item.desc}</p>\r\n\t\t\t\t{item.dueDate && (<p id=\"due-date\">Due: {item.dueDate}</p>)}\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ToDoItem;\r\n","import React from \"react\";\r\nimport { Calendar as AntdCal } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nfunction Calendar({ data }) {\r\n    function getDataForDate(date) {\r\n        let dateString = date.format(\"MM/DD/YYYY\");\r\n        let dateList = [];\r\n        data.map(item => {\r\n            if (item.dueDate === dateString) {\r\n                dateList = [...dateList, item];\r\n            }\r\n\r\n            return dateList;\r\n        });\r\n\r\n        return dateList;\r\n    }\r\n    \r\n    function dateCellRender(date) {\r\n        const dateList = getDataForDate(date);\r\n        return (\r\n        <>\r\n            {\r\n                    dateList.map(item => (\r\n                    <ul>\r\n                        <li>{item.title}</li>\r\n                    </ul>\r\n            ))}\r\n        </>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <AntdCal dateCellRender={dateCellRender}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calendar; ","import React, { useState } from \"react\";\nimport { Modal, Button } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport NewToDoForm from \"./components/NewToDoForm\";\nimport ToDoItem from \"./components/ToDoItem\";\nimport Calendar from \"./components/Calendar\";\nimport \"antd/dist/antd.css\";\nimport \"./styles/App.css\";\n\nfunction App() {\n\tconst [toDoList, updateToDoList] = useState([]);\n\tconst [isVisible, setNewModalVisible] = useState(false);\n\n\tfunction handleAddItem(newItem) {\n\t\tupdateToDoList((toDoList) => [...toDoList, newItem]);\n\t\tsetNewModalVisible(!isVisible);\n\t}\n\n\tfunction handleDeleteItem(item) {\n\t\tupdateToDoList(toDoList.filter((element) => element !== item));\n\t}\n\n\tfunction handleReorderItem(item, direction) {\n\t\tconst from = toDoList.indexOf(item);\n\n\t\t// edge cases\n\t\tif (\n\t\t\t(from === 0 && direction === \"up\") ||\n\t\t\t(from === toDoList.length - 1 && direction === \"down\")\n\t\t)\n\t\t\treturn;\n\n\t\tlet to = 0;\n\t\tswitch (direction) {\n\t\t\tcase \"up\":\n\t\t\t\tto = from - 1;\n\t\t\t\tbreak;\n\t\t\tcase \"down\":\n\t\t\t\tto = from + 1;\n\t\t\t\tbreak;\n\t\t\tcase \"bottom\":\n\t\t\t\tto = toDoList.length - 1;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tupdateToDoList((toDoList) => {\n\t\t\tlet newList = [...toDoList];\n\t\t\tnewList.splice(to, 1, newList.splice(from, 1, newList[to])[0]);\n\t\t\treturn newList;\n\t\t});\n\t}\n\n\tfunction handleModalVisibility() {\n\t\tsetNewModalVisible(!isVisible);\n\t}\n\n\treturn (\n\t\t<div id=\"container\">\n\t\t\t<header>\n\t\t\t\t<h1>To Do List</h1>\n\t\t\t\t<h3>What do you want to focus on today?</h3>\n\t\t\t</header>\n\n\t\t\t\n\t\t\t{!toDoList.length && (<p id=\"get-started\">Click the + button in the lower right hand corner to add your first task.</p>)}\n\n\t\t\t<div id=\"data-container\">\n\t\t\t\n\t\t\t\n\t\t\t{toDoList &&\n\t\t\t\ttoDoList.map((item) => (\n\t\t\t\t\t<ToDoItem\n\t\t\t\t\t\titem={item}\n\t\t\t\t\t\thandleDelete={handleDeleteItem}\n\t\t\t\t\t\thandleReorder={handleReorderItem}\n\t\t\t\t\t\tkey={item.title}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\n\t\t\t<Calendar data={toDoList} />\n\n\t\t\t<Button id=\"addItemButton\"\n\t\t\t\ttype=\"primary\"\n\t\t\t\tshape=\"circle\"\n\t\t\t\tsize=\"large\"\n\t\t\t\ticon={<PlusOutlined />}\n\t\t\t\tonClick={handleModalVisibility}\n\t\t\t/>\n\n\t\t\t<Modal\n\t\t\t\ttitle=\"Add New Item\"\n\t\t\t\tvisible={isVisible}\n\t\t\t\tfooter={[\n\t\t\t\t\t<Button\n\t\t\t\t\t\tform=\"addItemForm\"\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\thtmlType=\"submit\"\n\t\t\t\t\t>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</Button>,\n\t\t\t\t]}\n\t\t\t\tonCancel={handleModalVisibility}\n\t\t\t>\n\t\t\t\t<NewToDoForm handleSubmit={handleAddItem} />\n\t\t\t</Modal>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}